/* src/c_cpp/include/config.h.in.  Generated from configure.ac by autoheader.  */

/* asciidoctor command */
#undef ASCIIDOCTOR

/* awk command */
#undef AWK

/* curl command */
#undef CURL

/* docker command */
#undef DOCKER

/* git command */
#undef GIT

/* grep command */
#undef GREP

/* gunzip command */
#undef GUNZIP

/* asciidoctor command availability */
#undef HAVE_ASCIIDOCTOR

/* awk command availability */
#undef HAVE_AWK

/* curl command availability */
#undef HAVE_CURL

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* docker command availability */
#undef HAVE_DOCKER

/* git command availability */
#undef HAVE_GIT

/* grep command availability */
#undef HAVE_GREP

/* gunzip command availability */
#undef HAVE_GUNZIP

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* ln -s command availability */
#undef HAVE_LN_S

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* mkdir -p command availability */
#undef HAVE_MKDIR_P

/* openssl command availability */
#undef HAVE_OPENSSL

/* sed command availability */
#undef HAVE_SED

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* tar command availability */
#undef HAVE_TAR

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* wget command availability */
#undef HAVE_WGET

/* Result of checking for the x86-32 instruction set (all). */
#undef HAVE_X86_32

/* Result of checking for the x86-32 instruction set (C++ link). */
#undef HAVE_X86_32_CPP_LINK

/* Result of checking for the x86-32 instruction set (C link). */
#undef HAVE_X86_32_C_LINK

/* Result of checking for the x86-64 instruction set (all). */
#undef HAVE_X86_64

/* Result of checking for the x86-64 instruction set (C++ link). */
#undef HAVE_X86_64_CPP_LINK

/* Result of checking for the x86-64 instruction set (C link). */
#undef HAVE_X86_64_C_LINK

/* xz command availability */
#undef HAVE_XZ

/* zip command availability */
#undef HAVE_ZIP

/* ln -s command */
#undef LN_S

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#undef LT_OBJDIR

/* mkdir -p command */
#undef MKDIR_P

/* openssl command */
#undef OPENSSL

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to a character string literal that contains the appropriate
   proleptic Gregorian date in YYYY-MM-DD form, where the year may be preceded
   by a "+" character and may have any number of digits, including leading
   zeros. */
#undef PACKAGE_DATE

/* Define to the day of PACKAGE_DATE as an unsuffixed decimal integer
   constant. */
#undef PACKAGE_DATE_DAY

/* Define to a character string literal that contains the DD component of
   PACKAGE_DATE. */
#undef PACKAGE_DATE_DAY_ZPAD

/* Define to the integer constant 1 if PACKAGE_DATE_YEAR is a leap year, or
   the integer constant 0 if not. */
#undef PACKAGE_DATE_IS_LEAP_YEAR

/* Define to the month of PACKAGE_DATE as an unsuffixed decimal integer
   constant. */
#undef PACKAGE_DATE_MONTH

/* Define to the same character string literal as PACKAGE_DATE_MONTH_NAME but
   limited to three characters in length. */
#undef PACKAGE_DATE_MONTH_ABBR

/* Define to a character string literal that contains the capitalized full
   month name of PACKAGE_DATE. */
#undef PACKAGE_DATE_MONTH_NAME

/* Define to a character string literal that contains the MM component of
   PACKAGE_DATE. */
#undef PACKAGE_DATE_MONTH_ZPAD

/* Define to the same character string literal as PACKAGE_DATE but with each
   "-" character preceded by a "\" character. */
#undef PACKAGE_DATE_TROFF

/* Define to the year of PACKAGE_DATE as an unsuffixed decimal integer
   constant. */
#undef PACKAGE_DATE_YEAR

/* Define to a character string literal that contains PACKAGE_DATE_YEAR
   preceded by as many zeros as necessary to make it at least four characters
   long. Note that none are necessary if PACKAGE_DATE_YEAR is larger than 999.
   */
#undef PACKAGE_DATE_YEAR_ZPAD

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to a character string literal that contains the Debian version
   number of PACKAGE_VERSION. If PACKAGE_VERSION does not contain a "-"
   character, then this should be PACKAGE_VERSION. Otherwise, this should be
   PACKAGE_VERSION with the "-" character replaced with a "~" character. For
   example, if PACKAGE_VERSION were "0.1.0", then this should be "0.1.0", and
   if PACKAGE_VERSION were "0.1.0-4927+g88a52bb", then this should be
   "0.1.0~4927+g88a52bb". */
#undef PACKAGE_VERSION_DEB

/* Define to the same character string literal as PACKAGE_VERSION_DEB but with
   each "." character replaced with ".@:". For example, if PACKAGE_VERSION_DEB
   were "0.1.0", then this should be "0.@:1.@:0". */
#undef PACKAGE_VERSION_DEB_TEXI

/* Define to a character string literal that contains the Docker version
   number of PACKAGE_VERSION. If PACKAGE_VERSION does not contain a "-"
   character, then this should be PACKAGE_VERSION. Otherwise, this should be
   the text up to but not including the "+" character. For example, if
   PACKAGE_VERSION were "0.1.0", then this should be "0.1.0", and if
   PACKAGE_VERSION were "0.1.0-4927+g88a52bb", then this should be
   "0.1.0-4927". */
#undef PACKAGE_VERSION_DOCKER

/* Define to the same character string literal as PACKAGE_VERSION_DOCKER but
   with each "." character replaced with ".@:". For example, if
   PACKAGE_VERSION_DOCKER were "0.1.0", then this should be "0.@:1.@:0", and
   if PACKAGE_VERSION_DOCKER were "0.1.0-4927", then this should be
   "0.@:1.@:0-4927". */
#undef PACKAGE_VERSION_DOCKER_TEXI

/* Define to a character string literal that contains the Git description of
   PACKAGE_VERSION. If PACKAGE_VERSION does not contain a "-" character, then
   this should be a "v" character followed by PACKAGE_VERSION. Otherwise, this
   should be a "u" character followed by PACKAGE_VERSION, and the "+"
   character should be replaced with a "-" character. For example, if
   PACKAGE_VERSION were "0.1.0", then this should be "v0.1.0", and if
   PACKAGE_VERSION were "0.1.0-4927+g88a52bb", then this should be
   "u0.1.0-4927-g88a52bb". */
#undef PACKAGE_VERSION_GIT

/* Define to the same character string literal as PACKAGE_VERSION_GIT but with
   each "." character replaced with ".@:". For example, if PACKAGE_VERSION_GIT
   were "v0.1.0", then this should be "v0.@:1.@:0", and if PACKAGE_VERSION_GIT
   were "u0.1.0-4927-g88a52bb", then this should be
   "u0.@:1.@:0-4927-g88a52bb". */
#undef PACKAGE_VERSION_GIT_TEXI

/* */
#undef PACKAGE_VERSION_LIBTOOL_A

/* */
#undef PACKAGE_VERSION_LIBTOOL_C

/* */
#undef PACKAGE_VERSION_LIBTOOL_R

/* */
#undef PACKAGE_VERSION_MAJOR

/* */
#undef PACKAGE_VERSION_MINOR

/* */
#undef PACKAGE_VERSION_PATCH

/* Define to a character string literal that contains the RPM release number
   of PACKAGE_VERSION. If PACKAGE_VERSION does not contain a "-" character,
   then this should be "1". Otherwise, this should be "0." followed by the
   text after the "-" character, and the "+" character should be replaced with
   a "." character. For example, if PACKAGE_VERSION were "0.1.0", then this
   should be "1", and if PACKAGE_VERSION were "0.1.0-4927+g88a52bb", then this
   should be "0.4927.g88a52bb". */
#undef PACKAGE_VERSION_RPM_R

/* Define to the same character string literal as PACKAGE_VERSION_RPM_R but
   with each "." character replaced with ".@:". For example, if
   PACKAGE_VERSION_RPM_R were "1", then this should be "1", and if
   PACKAGE_VERSION_RPM_R were "0.4927.g88a52bb", then this should be
   "0.@:4927.@:g88a52bb". */
#undef PACKAGE_VERSION_RPM_R_TEXI

/* Define to a character string literal that contains the RPM version number
   of PACKAGE_VERSION. If PACKAGE_VERSION does not contain a "-" character,
   then this should be PACKAGE_VERSION. Otherwise, this should be the text up
   to but not including the "-" character. For example, if PACKAGE_VERSION
   were "0.1.0" or "0.1.0-4927+g88a52bb", then this should be "0.1.0". */
#undef PACKAGE_VERSION_RPM_V

/* Define to a character string literal that contains PACKAGE_VERSION_RPM_V
   followed by a "-" character followed by PACKAGE_VERSION_RPM_R. For example,
   if PACKAGE_VERSION_RPM_V were "0.1.0" and PACKAGE_VERSION_RPM_R were
   "0.4927.g88a52bb", then this should be "0.1.0-0.4927.g88a52bb". */
#undef PACKAGE_VERSION_RPM_VR

/* Define to the same character string literal as PACKAGE_VERSION_RPM_VR but
   with each "." character replaced with ".@:". For example, if
   PACKAGE_VERSION_RPM_VR were "0.1.0-0.4927.g88a52bb", then this should be
   "0.@:1.@:0-0.@:4927.@:g88a52bb". */
#undef PACKAGE_VERSION_RPM_VR_TEXI

/* Define to the same character string literal as PACKAGE_VERSION_RPM_V but
   with each "." character replaced with ".@:". For example, if
   PACKAGE_VERSION_RPM_V were "0.1.0", then this should be "0.@:1.@:0". */
#undef PACKAGE_VERSION_RPM_V_TEXI

/* Define to the same character string literal as PACKAGE_VERSION but with
   each "." character replaced with ".@:". For example, if PACKAGE_VERSION
   were "0.1.0", then this should be "0.@:1.@:0", and if PACKAGE_VERSION were
   "0.1.0-4927+g88a52bb", then this should be "0.@:1.@:0-4927+g88a52bb". */
#undef PACKAGE_VERSION_TEXI

/* sed command */
#undef SED

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* tar command */
#undef TAR

/* Version number of package */
#undef VERSION

/* wget command */
#undef WGET

/* Result of checking for the AES-NI instruction set (all). */
#undef WITH_AES_NI

/* Result of checking for the AES-NI instruction set (C++ link). */
#undef WITH_AES_NI_CPP_LINK

/* Result of checking for the AES-NI instruction set (C++ run). */
#undef WITH_AES_NI_CPP_RUN

/* Result of checking for the AES-NI instruction set (C link). */
#undef WITH_AES_NI_C_LINK

/* Result of checking for the AES-NI instruction set (C run). */
#undef WITH_AES_NI_C_RUN

/* Result of checking for the ARM Crypto instruction set (all). */
#undef WITH_ARM_CRYPTO

/* Result of checking for the ARM Crypto instruction set (C++ link). */
#undef WITH_ARM_CRYPTO_CPP_LINK

/* Result of checking for the ARM Crypto instruction set (C++ run). */
#undef WITH_ARM_CRYPTO_CPP_RUN

/* Result of checking for the ARM Crypto instruction set (C link). */
#undef WITH_ARM_CRYPTO_C_LINK

/* Result of checking for the ARM Crypto instruction set (C run). */
#undef WITH_ARM_CRYPTO_C_RUN

/* Result of checking for the AVX-512 BW instruction set (all). */
#undef WITH_AVX_512_BW

/* Result of checking for the AVX-512 BW instruction set (C++ link). */
#undef WITH_AVX_512_BW_CPP_LINK

/* Result of checking for the AVX-512 BW instruction set (C++ run). */
#undef WITH_AVX_512_BW_CPP_RUN

/* Result of checking for the AVX-512 BW instruction set (C link). */
#undef WITH_AVX_512_BW_C_LINK

/* Result of checking for the AVX-512 BW instruction set (C run). */
#undef WITH_AVX_512_BW_C_RUN

/* Result of checking for the AVX-512 F instruction set (all). */
#undef WITH_AVX_512_F

/* Result of checking for the AVX-512 F instruction set (C++ link). */
#undef WITH_AVX_512_F_CPP_LINK

/* Result of checking for the AVX-512 F instruction set (C++ run). */
#undef WITH_AVX_512_F_CPP_RUN

/* Result of checking for the AVX-512 F instruction set (C link). */
#undef WITH_AVX_512_F_C_LINK

/* Result of checking for the AVX-512 F instruction set (C run). */
#undef WITH_AVX_512_F_C_RUN

/* Result of checking for the AVX-512 VL instruction set (all). */
#undef WITH_AVX_512_VL

/* Result of checking for the AVX-512 VL instruction set (C++ link). */
#undef WITH_AVX_512_VL_CPP_LINK

/* Result of checking for the AVX-512 VL instruction set (C++ run). */
#undef WITH_AVX_512_VL_CPP_RUN

/* Result of checking for the AVX-512 VL instruction set (C link). */
#undef WITH_AVX_512_VL_C_LINK

/* Result of checking for the AVX-512 VL instruction set (C run). */
#undef WITH_AVX_512_VL_C_RUN

/* Result of checking CFLAGS += -Wall. */
#undef WITH_CFLAG_WALL

/* Result of checking CFLAGS += -Wextra. */
#undef WITH_CFLAG_WEXTRA

/* Result of checking whether C++11 is enabled (3). */
#undef WITH_CXXFLAG_CPP11

/* Result of checking whether C++11 is enabled (1). */
#undef WITH_CXXFLAG_CPP11_1

/* Result of checking whether C++11 is enabled (2). */
#undef WITH_CXXFLAG_CPP11_2

/* Result of checking CXXFLAGS += -Wall. */
#undef WITH_CXXFLAG_WALL

/* Result of checking CXXFLAGS += -Wextra. */
#undef WITH_CXXFLAG_WEXTRA

/* Result of checking for the Java Native Interface (all). */
#undef WITH_JNI

/* Result of checking for the Java Native Interface (C++ compile). */
#undef WITH_JNI_CPP_COMPILE

/* Result of checking for the Java Native Interface (C compile). */
#undef WITH_JNI_C_COMPILE

/* Result of checking --with-logging. */
#undef WITH_LOGGING

/* Result of checking for the Nettle nettle library (all). */
#undef WITH_NETTLE

/* Result of checking for the Nettle nettle library (C++ link). */
#undef WITH_NETTLE_CPP_LINK

/* Result of checking for the Nettle nettle library (C++ run). */
#undef WITH_NETTLE_CPP_RUN

/* Result of checking for the Nettle nettle library (C link). */
#undef WITH_NETTLE_C_LINK

/* Result of checking for the Nettle nettle library (C run). */
#undef WITH_NETTLE_C_RUN

/* Result of checking for the SSE instruction set (all). */
#undef WITH_SSE

/* Result of checking for the SSE2 instruction set (all). */
#undef WITH_SSE2

/* Result of checking for the SSE2 instruction set (C++ link). */
#undef WITH_SSE2_CPP_LINK

/* Result of checking for the SSE2 instruction set (C++ run). */
#undef WITH_SSE2_CPP_RUN

/* Result of checking for the SSE2 instruction set (C link). */
#undef WITH_SSE2_C_LINK

/* Result of checking for the SSE2 instruction set (C run). */
#undef WITH_SSE2_C_RUN

/* Result of checking for the SSE instruction set (C++ link). */
#undef WITH_SSE_CPP_LINK

/* Result of checking for the SSE instruction set (C++ run). */
#undef WITH_SSE_CPP_RUN

/* Result of checking for the SSE instruction set (C link). */
#undef WITH_SSE_C_LINK

/* Result of checking for the SSE instruction set (C run). */
#undef WITH_SSE_C_RUN

/* Result of checking for the Windows bcrypt API (all). */
#undef WITH_WINDOWS_BCRYPT

/* Result of checking for the Windows bcrypt API (C++ link). */
#undef WITH_WINDOWS_BCRYPT_CPP_LINK

/* Result of checking for the Windows bcrypt API (C++ run). */
#undef WITH_WINDOWS_BCRYPT_CPP_RUN

/* Result of checking for the Windows bcrypt API (C link). */
#undef WITH_WINDOWS_BCRYPT_C_LINK

/* Result of checking for the Windows bcrypt API (C run). */
#undef WITH_WINDOWS_BCRYPT_C_RUN

/* Result of checking for the Windows kernel32 API (all). */
#undef WITH_WINDOWS_KERNEL32

/* Result of checking for the Windows kernel32 API (C++ link). */
#undef WITH_WINDOWS_KERNEL32_CPP_LINK

/* Result of checking for the Windows kernel32 API (C++ run). */
#undef WITH_WINDOWS_KERNEL32_CPP_RUN

/* Result of checking for the Windows kernel32 API (C link). */
#undef WITH_WINDOWS_KERNEL32_C_LINK

/* Result of checking for the Windows kernel32 API (C run). */
#undef WITH_WINDOWS_KERNEL32_C_RUN

/* Result of checking whether an x86 instruction set is being used. */
#undef WITH_X86

/* Result of checking whether to use the x86-32 instruction set (result). */
#undef WITH_X86_32

/* Result of checking whether to use the x86-64 instruction set (result). */
#undef WITH_X86_64

/* xz command */
#undef XZ

/* zip command */
#undef ZIP
